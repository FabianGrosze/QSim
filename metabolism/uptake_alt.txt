  subroutine uptake(yk,xk,Qmxi,Qmni,CNaehr,Halbi,upmxi,tflie,up_Ci,up_N2i,abr,jcyano,ifix,j_aus)                                    
                                                                       
                                                                       
!     Ein Programm zur Berechnung der Nährstoffaufnahme durch Algen, sowie des Zellinternen Nährstoffgehalts

                                                                       
!     AUTOR:VOLKER KIRCHESCH                                            
                                                                       
!     STAND:09.05.2014                                                


!     dQ/dt = upX - µ*Q

      real             :: k1, k2, k3, k4
                                                                       
                                                                       
                                                                       
      j_intern = 1

      up_N2i = 0.0 
      up_Ci = 0.0

      xk = xk*tflie 

!        if(j_intern==0)then
!          up_Ci = ((Qmxi-yk)/(Qmxi-Qmni))*upmxi*(CNaehr/(CNaehr+Halbi))                                     
!          if(jcyano.eq.1.and.ifix.eq.1)up_N2i = ((Qmxi-yk)/(Qmxi-Qmni))*upmxi*(Halbi/(CNaehr+Halbi))                                      
!            else if(j_intern==1)then
!              up_Ci = upmxi*((1.-yk/Qmxi)/(1.-yk/Qmxi+0.01))*(CNaehr/(CNaehr+Halbi))                                     
!              if(jcyano.eq.1.and.ifix.eq.1)up_N2i = upmxi*((1.-yk/Qmxi)/(1.-yk/Qmxi+0.01))*(Halbi/(CNaehr+Halbi))
!        endif
         
!        up_Ci = up_Ci*tflie 
!        up_N2i = up_N2i*tflie 
                                                                       
        yk0 = yk

        if(j_intern==0)then
          up_Ci = ((Qmxi-yk)/(Qmxi-Qmni))*upmxi*(CNaehr/(CNaehr+Halbi))                                     
          if(jcyano.eq.1.and.ifix.eq.1)up_N2i = ((Qmxi-yk)/(Qmxi-Qmni))*upmxi*(Halbi/(CNaehr+Halbi))                                      
            else if(j_intern==1)then
              up_Ci = upmxi*((1.-yk/Qmxi)/(1.-yk/Qmxi+0.01))*(CNaehr/(CNaehr+Halbi))
              if(jcyano.eq.1.and.ifix.eq.1)up_N2i = upmxi*((1.-yk/Qmxi)/(1.-yk/Qmxi+0.01))*(Halbi/(CNaehr+Halbi))
        endif

        up_Ci = up_Ci*tflie 
        up_N2i = up_N2i*tflie 

!        if(j_aus==1)write(396,*)Qmxi,yk,xk,upmxi,up_Ci

!  Runge-Kutta

        h = 1.
        k1 = -xk*yk+up_Ci+up_N2i
        k2 = -xk*(yk+0.5*k1)+up_Ci+up_N2i
        k3 = -xk*(yk+0.5*k2)+up_Ci+up_N2i
        k4 = -xk*(yk+0.5*k3)+up_Ci+up_N2i 

        yk = yk+((h/6.)*(k1+2.*k2+2.*k3+k4)) 
 
!        write(396,*)yk,up_Ci,up_N2i,Qmxi
        if(yk>Qmxi)then
          up_Ci = (Qmxi - yk0)*(up_Ci/(up_Ci + up_N2i))
          up_N2i = (Qmxi - yk0)*(up_N2i/(up_Ci + up_N2i)) 
          yk = Qmxi
        endif
          if(yk<Qmni) yk = Qmni

        if(j_aus==1)write(396,*)yk,up_Ci

  END subroutine uptake                                      
